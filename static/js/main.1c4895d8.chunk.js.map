{"version":3,"sources":["lib/hooks/mouseEvents.js","lib/hooks/useMount.js","lib/helpers/rgbToHsv.js","lib/helpers/setRgba.js","lib/helpers/hsvToRgb.js","lib/helpers/changePicker.js","lib/helpers/getHue.js","lib/helpers/getAlpha.js","lib/helpers/hexToRgb.js","lib/helpers/updateGradientActivePercent.js","lib/helpers/getRightValue.js","lib/helpers/generateStyles.js","lib/components/ColorPicker/Area/Picking/index.jsx","lib/helpers/getRgbByHue.js","lib/components/ColorPicker/Area/Preview/index.jsx","lib/components/ColorPicker/Area/Hue/index.jsx","lib/components/ColorPicker/Area/Alpha/index.jsx","lib/components/ColorPicker/Area/GradientPoints/GradientPoint/index.jsx","lib/components/ColorPicker/Area/GradientPoints/index.jsx","lib/components/ColorPicker/Area/index.jsx","lib/components/UI/Input/index.jsx","lib/components/ColorPicker/Preview/Hex/index.jsx","lib/helpers/rgbToHex.js","lib/components/ColorPicker/Preview/RGB/item/index.jsx","lib/components/ColorPicker/Preview/RGB/index.jsx","lib/components/ColorPicker/Preview/index.jsx","lib/components/ColorPicker/Solid/index.jsx","lib/components/ColorPicker/Gradient/GradientControls/index.jsx","lib/helpers/calculateDegree.js","lib/components/ColorPicker/Gradient/index.jsx","lib/components/ColorPicker/index.jsx","App.js","index.js"],"names":["useMouseEvents","mouseDownHandler","mouseMoveHandler","mouseUpHandler","event","positions","onMouseMove","window","addEventListener","removeEventListener","once","useMount","effect","useEffect","rgbToHSv","rr","gg","bb","h","s","rabs","red","gabs","green","babs","blue","v","Math","max","diff","min","diffc","c","hue","round","saturation","value","isValidRGBValue","Number","isNaN","setRGBA","alpha","color","hsvToRgb","C","H","X","abs","m","changePicker","x","y","height","width","getHue","offsetX","getAlpha","toFixed","hexRegexp","regexp","updateGradientActivePercent","leftPercent","getRightValue","newValue","oldValue","generateSolidStyle","generateGradientStyle","points","type","degree","style","sortedPoints","slice","sort","a","b","left","forEach","point","index","length","Picking","updateRgb","pickingAreaRef","useRef","useState","setWidth","setHeight","current","clientWidth","clientHeight","r","g","getRgbByHue","backgroundColor","offsetLeft","offsetTop","getPointerStyle","top","useCallback","elementX","currentTarget","getBoundingClientRect","elementY","startX","pageX","startY","pageY","positionX","positionY","changeObjectPositions","mouseEvents","className","ref","onMouseDown","Preview","isGradient","gradientType","gradientDegree","setStyle","background","Hue","hueRef","pointerStyle","Alpha","alphaMaskRef","GradientPoint","activePointIndex","changeActivePointIndex","updateGradientLeft","removePoint","activeClassName","pointStyle","onClick","stopPropagation","onDoubleClick","GradientPoints","addPoint","pointsStyle","setpointsStyle","setPositions","pointsContainerRef","pointerPos","pointsContainerClick","map","key","Area","Input","label","onChange","onFocus","onBlur","classes","Hex","hexValue","setHexValue","progress","setProgress","hex","r16","toString","g16","b16","rgbToHex","changeHex","target","test","replace","setRgba","parseInt","substr","hsv","rgbToHsv","hexToRgb","RGBItem","inputValue","setInputValue","onChangeHandler","RGB","changeValue","field","Solid","onStartChange","onEndChange","colorRed","setColorRed","colorGreen","setColorGreen","colorBlue","setColorBlue","colorAlpha","setColorAlpha","colorHue","setColorHue","colorSaturation","setColorSaturation","colorValue","setColorValue","actions","updateColor","actionName","action","defaultProps","GradientControls","changeGradientControl","disableClick","setDisableClick","onClickGradientDegree","pointerBox","centerY","pageYOffset","centerX","pageXOffset","newDegree","atan2","PI","calculateDegree","clientX","clientY","targetClasses","classList","contains","degreesStyle","transform","Gradient","setActivePointIndex","gradientPoints","setGradientPoints","activePoint","setActivePoint","setGradientType","setGradientDegree","localGradientPoints","splice","keyUpHandler","keyCode","document","localGradientPoint","push","ColorPicker","gradient","App","attrs","name","console","log","display","textAlign","marginRight","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1c4895d8.chunk.js","sourcesContent":["export default function useMouseEvents(mouseDownHandler, mouseMoveHandler, mouseUpHandler) {\n    return function mouseEventsHandler(event) {\n        let positions = mouseDownHandler(event);\n\n        function onMouseMove(event) {\n            positions = mouseMoveHandler(event, positions) || positions;\n        }\n\n        window.addEventListener('mousemove', onMouseMove);\n\n        window.addEventListener('mouseup', event => {\n            window.removeEventListener('mousemove', onMouseMove);\n\n            mouseUpHandler && mouseUpHandler(event, positions);\n        }, { once: true });\n    };\n}\n","/* eslint react-hooks/exhaustive-deps: 0 */\n\nimport { useEffect } from 'react';\n\nconst useMount = effect => useEffect(effect, []);\n\nexport default useMount;\n","export default function rgbToHSv({ red, green, blue }) {\n    let rr;\n    let gg;\n    let bb;\n    let h;\n    let s;\n\n    const rabs = red / 255;\n    const gabs = green / 255;\n    const babs = blue / 255;\n    const v = Math.max(rabs, gabs, babs);\n    const diff = v - Math.min(rabs, gabs, babs);\n    const diffc = c => (v - c) / 6 / diff + 1 / 2;\n    if (diff === 0) {\n        h = 0;\n        s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n\n    return {\n        hue: Math.round(h * 360),\n        saturation: Math.round(s * 100),\n        value: Math.round(v * 100),\n    };\n}\n","function isValidRGBValue(value) {\n    return (typeof (value) === 'number' && Number.isNaN(value) === false && value >= 0 && value <= 255);\n}\n\nexport default function setRGBA(red, green, blue, alpha) {\n    if (isValidRGBValue(red) && isValidRGBValue(green) && isValidRGBValue(blue)) {\n        const color = {\n            red: red | 0,\n            green: green | 0,\n            blue: blue | 0,\n        };\n\n        if (isValidRGBValue(alpha) === true) {\n            color.alpha = alpha | 0;\n        }\n\n        // RGBToHSL(color.r, color.g, color.b);\n\n        return color;\n    }\n}\n","import setRGBA from './setRgba';\n\nexport default function hsvToRgb(hue, saturation, value) {\n    value /= 100;\n    const sat = saturation / 100;\n    let C = sat * value;\n    const H = hue / 60;\n    let X = C * (1 - Math.abs(H % 2 - 1));\n    let m = value - C;\n    const precision = 255;\n\n    C = (C + m) * precision | 0;\n    X = (X + m) * precision | 0;\n    m = m * precision | 0;\n\n    if (H >= 1 && H < 2) {\n        return setRGBA(X, C, m);\n    }\n    if (H >= 2 && H < 3) {\n        return setRGBA(m, C, X);\n    }\n    if (H >= 3 && H < 4) {\n        return setRGBA(m, X, C);\n    }\n    if (H >= 4 && H < 5) {\n        return setRGBA(X, m, C);\n    }\n    if (H >= 5 && H <= 6) {\n        return setRGBA(C, m, X);\n    }\n\n    return setRGBA(C, X, m);\n}\n","import hsvToRgb from './hsvToRgb';\n\nexport default function changePicker(x, y, height, width, hue) {\n    if (x > width) x = width;\n    if (y > height) y = height;\n    if (x < 0) x = 0;\n    if (y < 0) y = 0;\n    const value = 100 - (y * 100 / height) | 0;\n    const saturation = x * 100 / width | 0;\n    return {\n        ...hsvToRgb(hue, saturation, value),\n        saturation,\n        value,\n    };\n}\n","import { hsvToRgb } from './index';\n\nexport default function getHue(offsetX, width, saturation, value) {\n    let hue = ((360 * offsetX) / width) | 0;\n\n    hue = hue < 0 ? 0 : hue > 360 ? 360 : hue;\n\n    return {\n        ...hsvToRgb(hue, saturation, value),\n        hue,\n    };\n}\n","export default function getAlpha(value, width) {\n    value = Number((value / width).toFixed(2));\n\n    return value > 1 ? 1 : value < 0 ? 0 : value;\n}\n","import { rgbToHsv, setRgba } from './index';\n\nconst hexRegexp = /(^#{0,1}[0-9A-F]{6}$)|(^#{0,1}[0-9A-F]{3}$)|(^#{0,1}[0-9A-F]{8}$)/i;\n\nconst regexp = /([0-9A-F])([0-9A-F])([0-9A-F])/i;\n\nexport default function hexToRgb(value) {\n    const valid = hexRegexp.test(value);\n\n    if (valid) {\n        if (value[0] === '#') value = value.slice(1, value.length);\n\n        if (value.length === 3) value = value.replace(regexp, '$1$1$2$2$3$3');\n\n        const red = parseInt(value.substr(0, 2), 16);\n        const green = parseInt(value.substr(2, 2), 16);\n        const blue = parseInt(value.substr(4, 2), 16);\n        const alpha = parseInt(value.substr(6, 2), 16) / 255;\n\n        const color = setRgba(red, green, blue, alpha);\n        const hsv = rgbToHsv({ ...color });\n\n        return {\n            ...color,\n            ...hsv,\n        };\n    }\n\n    return false;\n}\n","export default function updateGradientActivePercent(offsetX, width) {\n    const leftPercent = (offsetX * 100) / width;\n    return leftPercent < 0 ? 0 : leftPercent > 100 ? 100 : leftPercent;\n}\n","export default function getRightValue(newValue, oldValue) {\n    return (!newValue && newValue !== 0) ? oldValue : newValue;\n}\n","export function generateSolidStyle(red, green, blue, alpha) {\n    return `rgba(${red}, ${green}, ${blue}, ${alpha})`;\n}\n\nexport function generateGradientStyle(points, type, degree) {\n    let style = '';\n    const sortedPoints = points.slice();\n\n    sortedPoints.sort((a, b) => a.left - b.left);\n\n    if (type === 'linear') {\n        style = `linear-gradient(${degree}deg,`;\n    } else {\n        style = 'radial-gradient(';\n    }\n\n    sortedPoints.forEach((point, index) => {\n        style += `rgba(${point.red}, ${point.green}, ${point.blue}, ${point.alpha}) ${point.left}%`;\n\n        if (index !== sortedPoints.length - 1) {\n            style += ',';\n        }\n    });\n\n    return style;\n}\n","import React, {\n    useEffect, useCallback, useRef, useState,\n} from 'react';\n\nimport { changePicker, getRgbByHue } from 'lib/helpers';\nimport { useMouseEvents } from 'lib/hooks';\n\nfunction Picking({\n    red,\n    green,\n    blue,\n    hue,\n    saturation,\n    value,\n    updateRgb,\n}) {\n    const pickingAreaRef = useRef();\n    const [width, setWidth] = useState(0);\n    const [height, setHeight] = useState(0);\n\n    useEffect(() => {\n        if (pickingAreaRef.current) {\n            setWidth(pickingAreaRef.current.clientWidth);\n            setHeight(pickingAreaRef.current.clientHeight);\n        }\n    }, [pickingAreaRef, setWidth, setHeight]);\n\n    useEffect(() => {\n        const { red, green, blue } = getRgbByHue(hue);\n\n        pickingAreaRef.current.style.backgroundColor = `rgb(${red}, ${green}, ${blue})`;\n    }, [hue]);\n\n    // generate offsetLeft by saturation\n    const offsetLeft = ((saturation * width / 100) | 0) - 6;\n\n    // generate offsetTop by value\n    const offsetTop = (height - (value * height / 100) | 0) - 6;\n\n    const getPointerStyle = {\n        backgroundColor: `rgb(${red}, ${green}, ${blue})`,\n        left: `${offsetLeft}px`,\n        top: `${offsetTop}px`,\n    };\n\n    const mouseDownHandler = useCallback(event => {\n        const elementX = event.currentTarget.getBoundingClientRect().x;\n        const elementY = event.currentTarget.getBoundingClientRect().y;\n        const startX = event.pageX;\n        const startY = event.pageY;\n        const positionX = startX - elementX;\n        const positionY = startY - elementY;\n\n        const color = changePicker(positionX, positionY, height, width, hue);\n\n        updateRgb(color, 'onStartChange');\n        return {\n            startX,\n            startY,\n            positionX,\n            positionY,\n\n        };\n    }, [height, width, hue, updateRgb]);\n\n    const changeObjectPositions = useCallback((event, {\n        startX, startY, positionX, positionY,\n    }) => {\n        const moveX = event.pageX - startX;\n        const moveY = event.pageY - startY;\n        positionX += moveX;\n        positionY += moveY;\n\n        const color = changePicker(positionX, positionY, height, width, hue);\n\n        return {\n            positions: {\n                positionX,\n                positionY,\n                startX: event.pageX,\n                startY: event.pageY,\n            },\n            color,\n        };\n    }, [height, hue, width]);\n\n    const mouseMoveHandler = useCallback((event, {\n        startX, startY, positionX, positionY,\n    }) => {\n        const { positions, color } = changeObjectPositions(event, {\n            startX, startY, positionX, positionY,\n        });\n\n        updateRgb(color, 'onChange');\n\n        return positions;\n    }, [updateRgb, changeObjectPositions]);\n\n    const mouseUpHandler = useCallback((event, {\n        startX, startY, positionX, positionY,\n    }) => {\n        const { positions, color } = changeObjectPositions(event, {\n            startX, startY, positionX, positionY,\n        });\n\n        updateRgb(color, 'onEndChange');\n\n        return positions;\n    }, [updateRgb, changeObjectPositions]);\n\n    const mouseEvents = useMouseEvents(mouseDownHandler, mouseMoveHandler, mouseUpHandler);\n\n    const onMouseDown = event => {\n        mouseEvents(event);\n    };\n\n    return (\n        <div\n            className=\"picking-area\"\n            ref={pickingAreaRef}\n            onMouseDown={onMouseDown}\n        >\n            <div className=\"picking-area-overlay1\">\n                <div className=\"picking-area-overlay2\">\n                    <div className=\"picker-pointer\" style={getPointerStyle} />\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Picking;\n","export default function getRgbByHue(hue) {\n    let C = 1;\n    const H = hue / 60;\n    let X = C * (1 - Math.abs(H % 2 - 1));\n    const m = 0;\n    const precision = 255;\n    let r = 0;\n    let g = 0;\n    let b = 0;\n\n    C = (C + m) * precision | 0;\n    X = (X + m) * precision | 0;\n\n    if (H >= 0 && H < 1) {\n        r = C | 0;\n        g = X | 0;\n        b = m | 0;\n    }\n    if (H >= 1 && H < 2) {\n        r = X | 0;\n        g = C | 0;\n        b = m | 0;\n    }\n    if (H >= 2 && H < 3) {\n        r = m | 0;\n        g = C | 0;\n        b = X | 0;\n    }\n    if (H >= 3 && H < 4) {\n        r = m | 0;\n        g = X | 0;\n        b = C | 0;\n    }\n    if (H >= 4 && H < 5) {\n        r = X | 0;\n        g = m | 0;\n        b = C | 0;\n    }\n    if (H >= 5 && H <= 6) {\n        r = C | 0;\n        g = m | 0;\n        b = X | 0;\n    }\n\n    return {\n        red: r,\n        green: g,\n        blue: b,\n    };\n}\n","import React, { useEffect, useState } from 'react';\n\nimport { generateSolidStyle, generateGradientStyle } from 'lib/helpers';\n\nfunction Preview({\n    red,\n    green,\n    blue,\n    alpha,\n    isGradient,\n    points,\n    gradientType,\n    gradientDegree,\n}) {\n    const [style, setStyle] = useState({});\n\n    useEffect(() => {\n        if (isGradient) {\n            const style = generateGradientStyle(points, gradientType, gradientDegree);\n\n            setStyle({ background: style });\n\n            return;\n        }\n\n        const style = generateSolidStyle(red, green, blue, alpha);\n\n        setStyle({ backgroundColor: style });\n    }, [points, gradientDegree, gradientType, isGradient, red, green, blue, alpha]);\n\n    return (\n        <div className=\"preview-area\">\n            <div className=\"preview-box\" style={style} />\n        </div>\n    );\n}\n\nexport default Preview;\n","import React, {\n    useCallback, useEffect, useRef, useState,\n} from 'react';\n\nimport { useMouseEvents } from 'lib/hooks';\nimport { getHue } from 'lib/helpers';\n\nfunction Hue({\n    hue, saturation, value, updateRgb,\n}) {\n    const hueRef = useRef();\n    const [width, setWidth] = useState(0);\n\n    useEffect(() => {\n        if (hueRef.current) {\n            setWidth(hueRef.current.clientWidth);\n        }\n    }, [setWidth]);\n\n    const mouseDownHandler = useCallback(event => {\n        const elementX = event.currentTarget.getBoundingClientRect().x;\n        const startX = event.pageX;\n        const positionX = startX - elementX;\n\n        const color = getHue(positionX, width, saturation, value);\n\n        updateRgb(color, 'onStartChange');\n\n        return {\n            startX,\n            positionX,\n        };\n    }, [width, saturation, value, updateRgb]);\n\n    const changeObjectPositions = useCallback((event, { startX, positionX }) => {\n        const moveX = event.pageX - startX;\n        positionX += moveX;\n\n        // update value and saturation\n        const offsetX = positionX > width ? width : positionX <= 0 ? 0 : positionX;\n        const color = getHue(offsetX, width, saturation, value);\n\n        return {\n            positions: {\n                positionX,\n                startX: event.pageX,\n            },\n            color,\n        };\n    }, [width, saturation, value]);\n\n    const mouseMoveHandler = useCallback((event, { startX, positionX }) => {\n        const { positions, color } = changeObjectPositions(event, { startX, positionX });\n\n        updateRgb(color, 'onChange');\n\n        return positions;\n    }, [changeObjectPositions, updateRgb]);\n\n    const mouseUpHandler = useCallback((event, { startX, positionX }) => {\n        const { positions, color } = changeObjectPositions(event, { startX, positionX });\n\n        updateRgb(color, 'onEndChange');\n\n        return positions;\n    }, [changeObjectPositions, updateRgb]);\n\n    const mouseEvents = useMouseEvents(mouseDownHandler, mouseMoveHandler, mouseUpHandler);\n\n    const onMouseDown = event => {\n        mouseEvents(event);\n    };\n\n    const offsetLeft = ((hue * width / 360) | 0) - 6;\n\n    const pointerStyle = {\n        left: `${offsetLeft}px`,\n    };\n\n    return (\n        <div\n            className=\"hue\"\n            onMouseDown={onMouseDown}\n        >\n            <div className=\"hue-area\" ref={hueRef}>\n                <div\n                    className=\"picker-pointer\"\n                    style={pointerStyle}\n                />\n            </div>\n        </div>\n    );\n}\n\nexport default Hue;\n","import React, {\n    useCallback, useEffect, useRef, useState,\n} from 'react';\n\nimport { useMouseEvents } from 'lib/hooks';\nimport { getAlpha } from 'lib/helpers';\n\nfunction Alpha({\n    red, green, blue, alpha, updateRgb,\n}) {\n    const alphaMaskRef = useRef();\n    const [width, setWidth] = useState(0);\n\n    useEffect(() => {\n        if (alphaMaskRef.current) {\n            setWidth(alphaMaskRef.current.clientWidth);\n        }\n    }, [setWidth]);\n\n    const mouseDownHandler = useCallback(event => {\n        const elementX = event.currentTarget.getBoundingClientRect().x;\n        const startX = event.pageX;\n        const positionX = startX - elementX;\n\n        updateRgb({ alpha: getAlpha(positionX, width) }, 'onStartChange');\n        return {\n            startX,\n            positionX,\n\n        };\n    }, [width, updateRgb]);\n\n    const changeObjectPositions = useCallback((event, { startX, positionX }) => {\n        const moveX = event.pageX - startX;\n        positionX += moveX;\n\n        const alpha = getAlpha(positionX, width);\n\n        return {\n            positions: {\n                positionX,\n                startX: event.pageX,\n            },\n            alpha,\n        };\n    }, [width]);\n\n    const mouseMoveHandler = useCallback((event, { startX, positionX }) => {\n        const { positions, alpha } = changeObjectPositions(event, { startX, positionX });\n\n        updateRgb({ alpha }, 'onChange');\n\n        return positions;\n    }, [changeObjectPositions, updateRgb]);\n\n    const mouseUpHandler = useCallback((event, { startX, positionX }) => {\n        const { positions, alpha } = changeObjectPositions(event, { startX, positionX });\n\n        updateRgb({ alpha }, 'onEndChange');\n\n        return positions;\n    }, [changeObjectPositions, updateRgb]);\n\n    const mouseEvents = useMouseEvents(mouseDownHandler, mouseMoveHandler, mouseUpHandler);\n\n    const onMouseDown = event => {\n        mouseEvents(event);\n    };\n\n    const style = {\n        background: `linear-gradient(to right, rgba(0, 0, 0, 0), rgb(${red}, ${green}, ${blue}))`,\n    };\n\n    const offsetLeft = ((alpha * width) | 0) - 6;\n\n    const pointerStyle = {\n        left: `${offsetLeft}px`,\n    };\n\n    return (\n        <div\n            onMouseDown={onMouseDown}\n            className=\"alpha\"\n        >\n            <div className=\"gradient\" style={style} />\n            <div className=\"alpha-area\">\n                <div className=\"alpha-mask\" ref={alphaMaskRef}>\n                    <div className=\"picker-pointer\" style={pointerStyle} />\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Alpha;\n","import React, { useCallback } from 'react';\n\nimport { updateGradientActivePercent } from 'lib/helpers';\nimport { useMouseEvents } from 'lib/hooks';\n\nfunction GradientPoint({\n    point,\n    activePointIndex,\n    index,\n    width,\n    positions,\n    changeActivePointIndex,\n    updateGradientLeft,\n    removePoint,\n}) {\n    const activeClassName = activePointIndex === index ? ' active' : '';\n\n    const pointStyle = {\n        left: `${(point.left * (width / 100)) - 6}px`,\n    };\n\n    const mouseDownHandler = useCallback(event => {\n        changeActivePointIndex(index);\n\n        const startX = event.pageX;\n        const startY = event.pageY;\n        const offsetX = startX - positions.x;\n\n        updateGradientLeft(point.left, index, 'onStartChange');\n\n        return {\n            startX,\n            startY,\n            offsetX,\n\n        };\n    }, [point.left, index, positions, changeActivePointIndex, updateGradientLeft]);\n\n    const changeObjectPositions = useCallback((event, { startX, offsetX }) => {\n        const moveX = event.pageX - startX;\n        offsetX += moveX;\n        // update point percent\n        const left = updateGradientActivePercent(offsetX, width);\n\n        return {\n            positions: {\n                offsetX,\n                startX: event.pageX,\n            },\n            left,\n        };\n    }, [width]);\n\n    const mouseMoveHandler = useCallback((event, { startX, offsetX }) => {\n        const { positions, left } = changeObjectPositions(event, { startX, offsetX });\n\n        updateGradientLeft(left, index, 'onChange');\n\n        return positions;\n    }, [index, changeObjectPositions, updateGradientLeft]);\n\n    const mouseUpHandler = useCallback((event, { startX, offsetX }) => {\n        const { positions, left } = changeObjectPositions(event, { startX, offsetX });\n\n        updateGradientLeft(left, index, 'onEndChange');\n\n        return positions;\n    }, [index, changeObjectPositions, updateGradientLeft]);\n\n    const mouseEvents = useMouseEvents(mouseDownHandler, mouseMoveHandler, mouseUpHandler);\n\n    const onMouseDown = event => {\n        changeActivePointIndex(index);\n        mouseEvents(event);\n    };\n\n    const pointerClickHandler = event => {\n        event.stopPropagation();\n    };\n\n    return (\n        <div\n            className={`picker-pointer${activeClassName}`}\n            onClick={pointerClickHandler}\n            style={pointStyle}\n            onMouseDown={onMouseDown}\n            onDoubleClick={() => removePoint(index)}\n        >\n            <span className={`child-point${activeClassName}`} />\n        </div>\n    );\n}\n\nexport default GradientPoint;\n","import React, {\n    useEffect, useState, useRef, useCallback,\n} from 'react';\n\nimport { generateGradientStyle, updateGradientActivePercent } from 'lib/helpers';\n\nimport GradientPoint from './GradientPoint';\n\nfunction GradientPoints({\n    points, activePointIndex, changeActivePointIndex, updateGradientLeft, addPoint, removePoint,\n}) {\n    const [pointsStyle, setpointsStyle] = useState({});\n    const [width, setWidth] = useState(0);\n    const [positions, setPositions] = useState({});\n\n    const pointsContainerRef = useRef();\n\n\n    useEffect(() => {\n        if (pointsContainerRef.current) {\n            setWidth(pointsContainerRef.current.clientWidth);\n\n            const pointerPos = pointsContainerRef.current.getBoundingClientRect();\n            setPositions({ x: pointerPos.x, y: pointerPos.y });\n        }\n    }, []);\n    useEffect(() => {\n        const style = generateGradientStyle(points, 'linear', 90);\n\n        setpointsStyle({ background: style });\n    }, [points]);\n\n\n    const pointsContainerClick = useCallback(event => {\n        const left = updateGradientActivePercent(event.pageX - positions.x, width);\n\n        addPoint(left);\n    }, [addPoint, positions.x, width]);\n\n    const pointsContainer = () => (\n        <div\n            className=\"gradient-slider-container\"\n            ref={pointsContainerRef}\n        >\n            {\n                points && points.map((point, index) => (\n                    <GradientPoint\n                        key={index}\n                        activePointIndex={activePointIndex}\n                        index={index}\n                        point={point}\n                        width={width}\n                        positions={positions}\n                        changeActivePointIndex={changeActivePointIndex}\n                        updateGradientLeft={updateGradientLeft}\n                        removePoint={removePoint}\n                    />\n                ))\n            }\n        </div>\n    );\n\n    return (\n        <div\n            className=\"gradient\"\n            style={pointsStyle}\n            onClick={pointsContainerClick}\n        >\n            {pointsContainer()}\n        </div>\n\n\n    );\n}\n\nexport default GradientPoints;\n","import React from 'react';\n\nimport Picking from './Picking';\nimport Preview from './Preview';\nimport Hue from './Hue';\nimport Alpha from './Alpha';\nimport GradientPoints from './GradientPoints';\n\nfunction Area({\n    red,\n    green,\n    blue,\n    alpha,\n    hue,\n    saturation,\n    value,\n    isGradient,\n    type,\n    degree,\n    points,\n    activePointIndex,\n    updateRgb,\n    changeActivePointIndex,\n    updateGradientLeft,\n    addPoint,\n    removePoint,\n}) {\n    return (\n        <div className=\"picker-area\">\n            <Picking\n                red={red}\n                green={green}\n                blue={blue}\n                hue={hue}\n                saturation={saturation}\n                value={value}\n                updateRgb={updateRgb}\n            />\n\n            {\n                isGradient\n                && (\n                    <GradientPoints\n                        type={type}\n                        degree={degree}\n                        points={points}\n                        activePointIndex={activePointIndex}\n                        changeActivePointIndex={changeActivePointIndex}\n                        updateGradientLeft={updateGradientLeft}\n                        addPoint={addPoint}\n                        removePoint={removePoint}\n                    />\n                )\n            }\n\n            <div className=\"preview\">\n                <Preview\n                    red={red}\n                    green={green}\n                    blue={blue}\n                    alpha={alpha}\n                    points={points}\n                    gradientDegree={degree}\n                    gradientType={type}\n                    isGradient={isGradient}\n                />\n\n                <div className=\"color-hue-alpha\">\n                    <Hue\n                        hue={hue}\n                        saturation={saturation}\n                        value={value}\n                        updateRgb={updateRgb}\n                    />\n                    <Alpha\n                        alpha={alpha}\n                        red={red}\n                        green={green}\n                        blue={blue}\n                        updateRgb={updateRgb}\n                    />\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Area;\n","import React from 'react';\nimport './index.scss';\n\nfunction Input({\n    value, label, type = 'text', onChange, onFocus, onBlur, classes,\n}) {\n    return (\n        <div className={`input-field ${classes}`}>\n            <div className=\"input-container\">\n                <input\n                    className={`${type}-input input`}\n                    value={value}\n                    onChange={onChange}\n                    onFocus={onFocus}\n                    onBlur={onBlur}\n                />\n            </div>\n            <div className=\"label\">\n                {label}\n            </div>\n        </div>\n    );\n}\n\nexport { Input };\n","import React, { useState, useEffect, useCallback } from 'react';\n\nimport { rgbToHex, hexToRgb } from 'lib/helpers';\nimport { Input } from 'lib/components/UI';\n\nfunction Hex({\n    red, green, blue, updateRgb,\n}) {\n    const [hexValue, setHexValue] = useState('');\n    const [progress, setProgress] = useState(false);\n\n    useEffect(() => {\n        if (progress) {\n            return;\n        }\n        const hex = rgbToHex(red, green, blue);\n\n        setHexValue(hex);\n    }, [red, green, blue, progress]);\n\n    const changeHex = useCallback(event => {\n        setHexValue(event.target.value);\n        const color = hexToRgb(event.target.value);\n\n        if (color) {\n            updateRgb(color);\n        }\n    }, [setHexValue, updateRgb]);\n\n    return (\n        <Input\n            value={hexValue}\n            label=\"hex\"\n            onChange={changeHex}\n            onFocus={() => setProgress(true)}\n            onBlur={() => setProgress(false)}\n            classes=\"hex\"\n        />\n    );\n}\n\nexport default Hex;\n","export default function rgbToHex(red, green, blue) {\n    let r16 = red.toString(16);\n    let g16 = green.toString(16);\n    let b16 = blue.toString(16);\n\n    if (red < 16) r16 = `0${r16}`;\n    if (green < 16) g16 = `0${g16}`;\n    if (blue < 16) b16 = `0${b16}`;\n\n    return r16 + g16 + b16;\n}\n","import React, { useCallback, useEffect, useState } from 'react';\n\nimport { Input } from 'lib/components/UI';\n\nexport default function RGBItem({\n    value, type, label, onChange,\n}) {\n    const [inputValue, setInputValue] = useState(value);\n\n    useEffect(() => {\n        if (value !== +inputValue && inputValue !== '') {\n            setInputValue(value);\n        }\n    }, [inputValue, value]);\n\n    const onChangeHandler = useCallback(event => {\n        const value = +event.target.value;\n\n        if (Number.isNaN(value) || value.length > 3 || value < 0 || value > 255) {\n            return;\n        }\n        setInputValue(event.target.value);\n\n        onChange(value);\n    }, [onChange]);\n\n    const onBlur = useCallback(() => {\n        !inputValue && inputValue !== 0 && setInputValue(value);\n    }, [inputValue, setInputValue, value]);\n\n    return (\n        <Input\n            value={inputValue}\n            type={type}\n            label={label}\n            onChange={onChangeHandler}\n            onBlur={onBlur}\n            classes=\"rgb\"\n        />\n    );\n}\n","import React, { useCallback } from 'react';\n\nimport { rgbToHsv } from 'lib/helpers';\n\nimport RGBItem from './item';\n\nfunction RGB({\n    red, green, blue, alpha, updateRgb,\n}) {\n    const changeValue = useCallback((field, value) => {\n        if (field === 'alpha') {\n            updateRgb({ alpha: value / 100 });\n\n            return;\n        }\n\n        const color = rgbToHsv({\n            red, green, blue, [field]: value,\n        });\n\n        updateRgb({ ...color, [field]: value });\n    }, [red, green, blue, updateRgb]);\n\n    return (\n        <>\n            <RGBItem\n                value={red}\n                type=\"number\"\n                label=\"R\"\n                onChange={value => changeValue('red', value)}\n            />\n\n            <RGBItem\n                value={green}\n                type=\"number\"\n                label=\"G\"\n                onChange={value => changeValue('green', value)}\n            />\n\n            <RGBItem\n                value={blue}\n                type=\"number\"\n                label=\"B\"\n                onChange={value => changeValue('blue', value)}\n            />\n\n            <RGBItem\n                value={parseInt(alpha * 100, 10)}\n                type=\"number\"\n                label=\"alpha\"\n                onChange={value => changeValue('alpha', value)}\n            />\n        </>\n    );\n}\n\nexport default RGB;\n","import React from 'react';\n\nimport Hex from './Hex';\nimport RGB from './RGB';\n\nfunction Preview({\n    red, green, blue, alpha, updateRgb,\n}) {\n    return (\n        <div className=\"color-preview-area\">\n            <div className=\"input-group\">\n                <Hex\n                    red={red}\n                    green={green}\n                    blue={blue}\n                    updateRgb={updateRgb}\n                />\n\n                <RGB\n                    red={red}\n                    green={green}\n                    blue={blue}\n                    alpha={alpha}\n                    updateRgb={updateRgb}\n                />\n            </div>\n        </div>\n    );\n}\n\nexport default Preview;\n","import React, { useCallback, useState } from 'react';\n\nimport { useMount } from 'lib/hooks';\nimport { rgbToHsv, getRightValue, generateSolidStyle } from 'lib/helpers';\n\nimport Area from '../Area';\nimport Preview from '../Preview';\n\nfunction Solid({\n    red,\n    green,\n    blue,\n    alpha,\n    onChange,\n    onStartChange,\n    onEndChange,\n}) {\n    const [colorRed, setColorRed] = useState(red);\n    const [colorGreen, setColorGreen] = useState(green);\n    const [colorBlue, setColorBlue] = useState(blue);\n    const [colorAlpha, setColorAlpha] = useState(alpha);\n    const [colorHue, setColorHue] = useState(0);\n    const [colorSaturation, setColorSaturation] = useState(100);\n    const [colorValue, setColorValue] = useState(100);\n\n    const actions = {\n        onChange,\n        onStartChange,\n        onEndChange,\n    };\n\n    useMount(() => {\n        const { hue, saturation, value } = rgbToHsv({ red: colorRed, green: colorGreen, blue: colorBlue });\n\n        setColorHue(hue);\n        setColorSaturation(saturation);\n        setColorValue(value);\n    });\n\n    const updateColor = useCallback(({\n        red, green, blue, alpha, hue, saturation, value,\n    }, actionName = 'onChange') => {\n        red = getRightValue(red, colorRed);\n        green = getRightValue(green, colorGreen);\n        blue = getRightValue(blue, colorBlue);\n        alpha = getRightValue(alpha, colorAlpha);\n        hue = getRightValue(hue, colorHue);\n        saturation = getRightValue(saturation, colorSaturation);\n        value = getRightValue(value, colorValue);\n\n        setColorRed(red);\n        setColorGreen(green);\n        setColorBlue(blue);\n        setColorAlpha(alpha);\n        setColorHue(hue);\n        setColorSaturation(saturation);\n        setColorValue(value);\n\n        const action = actions[actionName];\n\n        action && action({\n            red,\n            green,\n            blue,\n            alpha,\n            hue,\n            saturation,\n            value,\n            style: generateSolidStyle(red, green, blue, alpha),\n        });\n    }, [\n        colorRed, colorGreen, colorBlue, colorAlpha,\n        colorHue, colorSaturation, colorValue,\n        actions,\n    ]);\n\n    return (\n        <>\n            <Area\n                red={colorRed}\n                green={colorGreen}\n                blue={colorBlue}\n                alpha={colorAlpha}\n                hue={colorHue}\n                saturation={colorSaturation}\n                value={colorValue}\n                updateRgb={updateColor}\n            />\n            <Preview\n                red={colorRed}\n                green={colorGreen}\n                blue={colorBlue}\n                alpha={colorAlpha}\n                updateRgb={updateColor}\n            />\n        </>\n    );\n}\n\nSolid.defaultProps = {\n    red: 255,\n    green: 0,\n    blue: 0,\n    alpha: 1,\n};\n\nexport default Solid;\n","import React, { useCallback, useState } from 'react';\n\nimport { calculateDegree } from 'lib/helpers';\nimport { useMouseEvents } from 'lib/hooks';\n\nfunction GradientControls({ type, degree, changeGradientControl }) {\n    const [disableClick, setDisableClick] = useState(false);\n\n    const onClickGradientDegree = useCallback(() => {\n        if (disableClick) {\n            setDisableClick(false);\n            return;\n        }\n\n        let gradientDegree = degree + 45;\n\n        if (gradientDegree >= 360) {\n            gradientDegree = 0;\n        }\n\n        changeGradientControl({ degree: parseInt(gradientDegree, 10) });\n    }, [disableClick, degree, changeGradientControl]);\n\n    const mouseDownHandler = useCallback(event => {\n        const pointer = event.target;\n        const pointerBox = pointer.getBoundingClientRect();\n        const centerY = pointerBox.top + parseInt(8 - window.pageYOffset, 10);\n        const centerX = pointerBox.left + parseInt(8 - window.pageXOffset, 10);\n\n        return {\n            centerY,\n            centerX,\n\n        };\n    }, []);\n\n    const mouseMoveHandler = useCallback((event, { centerX, centerY }) => {\n        setDisableClick(true);\n\n        const newDegree = calculateDegree(event.clientX, event.clientY, centerX, centerY);\n\n        changeGradientControl({ degree: parseInt(newDegree, 10) });\n\n        return { centerX, centerY };\n    }, [changeGradientControl]);\n\n    const mouseUpHandler = event => {\n        const targetClasses = event.target.classList;\n\n        if (targetClasses.contains('gradient-degrees') || targetClasses.contains('icon-rotate')) {\n            return;\n        }\n\n        setDisableClick(false);\n    };\n\n    const mouseEvents = useMouseEvents(mouseDownHandler, mouseMoveHandler, mouseUpHandler);\n\n    const onMouseDown = event => {\n        mouseEvents(event);\n    };\n\n    const degreesStyle = {\n        transform: `rotate(${degree}deg)`,\n    };\n\n    return (\n        <div className=\"gradient-controls\">\n            <div className=\"gradient-type\">\n                <div\n                    className={`gradient-type-item liner-gradient ${type === 'linear' ? 'active' : ''}`}\n                    onClick={() => changeGradientControl({ type: 'linear' })}\n                />\n                <div\n                    className={`gradient-type-item radial-gradient ${type === 'radial' ? 'active' : ''}`}\n                    onClick={() => changeGradientControl({ type: 'radial' })}\n                />\n            </div>\n            {\n                type === 'linear'\n                && (\n                    <div className=\"gradient-degrees-options\">\n                        <div\n                            className=\"gradient-degrees\"\n                            onMouseDown={onMouseDown}\n                            onClick={onClickGradientDegree}\n                        >\n                            <div className=\"gradient-degree-center\" style={degreesStyle}>\n                                <div className=\"gradient-degree-pointer\" />\n                            </div>\n                        </div>\n                        <div className=\"gradient-degree-value\">\n                            <p>\n                                {degree}\n                                &#176;\n                            </p>\n                        </div>\n                    </div>\n                )\n            }\n        </div>\n    );\n}\n\nexport default GradientControls;\n","export default function calculateDegree(x, y, centerX, centerY) {\n    const radians = Math.atan2(x - centerX, y - centerY);\n    return (radians * (180 / Math.PI) * -1) + 180;\n}\n","import React, { useCallback, useEffect, useState } from 'react';\n\nimport { useMount } from 'lib/hooks';\nimport { rgbToHsv, getRightValue, generateGradientStyle } from 'lib/helpers';\n\nimport Area from '../Area';\nimport Preview from '../Preview';\nimport GradientControls from './GradientControls';\n\nfunction Gradient({\n    points, type, degree, onChange, onStartChange, onEndChange,\n}) {\n    const [activePointIndex, setActivePointIndex] = useState(0);\n    const [gradientPoints, setGradientPoints] = useState(points);\n    const [activePoint, setActivePoint] = useState(gradientPoints[0]);\n    const [colorRed, setColorRed] = useState(activePoint.red);\n    const [colorGreen, setColorGreen] = useState(activePoint.green);\n    const [colorBlue, setColorBlue] = useState(activePoint.blue);\n    const [colorAlpha, setColorAlpha] = useState(activePoint.alpha);\n    const [colorHue, setColorHue] = useState(0);\n    const [colorSaturation, setColorSaturation] = useState(100);\n    const [colorValue, setColorValue] = useState(100);\n    const [gradientType, setGradientType] = useState(type);\n    const [gradientDegree, setGradientDegree] = useState(degree);\n\n    const actions = {\n        onChange,\n        onStartChange,\n        onEndChange,\n    };\n\n    useMount(() => {\n        const { hue, saturation, value } = rgbToHsv({ red: colorRed, green: colorGreen, blue: colorBlue });\n\n        setColorHue(hue);\n        setColorSaturation(saturation);\n        setColorValue(value);\n    });\n\n    const removePoint = useCallback((index = activePointIndex) => {\n        if (gradientPoints.length <= 2) {\n            return;\n        }\n\n        const localGradientPoints = gradientPoints.slice();\n        localGradientPoints.splice(index, 1);\n\n        setGradientPoints(localGradientPoints);\n\n        if (index > 0) {\n            setActivePointIndex(index - 1);\n        }\n\n        onChange && onChange({\n            points: localGradientPoints,\n            type: gradientType,\n            degree: gradientDegree,\n            style: generateGradientStyle(localGradientPoints, gradientType, gradientDegree),\n        });\n    }, [gradientPoints, activePointIndex, gradientType, gradientDegree, onChange]);\n\n    const keyUpHandler = useCallback(event => {\n        if ((event.keyCode === 46 || event.keyCode === 8)) {\n            removePoint(activePointIndex);\n        }\n    }, [activePointIndex, removePoint]);\n\n    useEffect(() => {\n        document.addEventListener('keyup', keyUpHandler);\n\n        return () => {\n            document.removeEventListener('keyup', keyUpHandler);\n        };\n    });\n\n    const changeGradientControl = useCallback(({ type, degree }, actionName = 'onChange') => {\n        type = getRightValue(type, gradientType);\n        degree = getRightValue(degree, gradientDegree);\n\n        setGradientType(type);\n        setGradientDegree(degree);\n\n        const action = actions[actionName];\n\n        action && action({\n            points: gradientPoints,\n            type,\n            degree,\n            style: generateGradientStyle(gradientPoints, type, degree),\n        });\n    }, [actions, gradientPoints, gradientDegree, gradientType]);\n\n    const changeActivePointIndex = useCallback(index => {\n        setActivePointIndex(index);\n\n        const localGradientPoint = gradientPoints[index];\n        const {\n            red, green, blue, alpha,\n        } = localGradientPoint;\n        setActivePoint(localGradientPoint);\n\n        setColorRed(red);\n        setColorGreen(green);\n        setColorBlue(blue);\n        setColorAlpha(alpha);\n\n        const { hue, saturation, value } = rgbToHsv({ red, green, blue });\n\n        setColorHue(hue);\n        setColorSaturation(saturation);\n        setColorValue(value);\n    }, [gradientPoints]);\n\n    const updateColor = useCallback(({\n        red, green, blue, alpha, hue, saturation, value,\n    }, actionName = 'onChange') => {\n        red = getRightValue(red, colorRed);\n        green = getRightValue(green, colorGreen);\n        blue = getRightValue(blue, colorBlue);\n        alpha = getRightValue(alpha, colorAlpha);\n        hue = getRightValue(hue, colorHue);\n        saturation = getRightValue(saturation, colorSaturation);\n        value = getRightValue(value, colorValue);\n\n        const localGradientPoints = gradientPoints.slice();\n\n        localGradientPoints[activePointIndex] = {\n            ...localGradientPoints[activePointIndex],\n            red,\n            green,\n            blue,\n            alpha,\n        };\n\n        setColorRed(red);\n        setColorGreen(green);\n        setColorBlue(blue);\n        setColorAlpha(alpha);\n        setColorHue(hue);\n        setColorSaturation(saturation);\n        setColorValue(value);\n        setGradientPoints(localGradientPoints);\n\n        const action = actions[actionName];\n\n        action && action({\n            points: localGradientPoints,\n            type: gradientType,\n            degree: gradientDegree,\n            style: generateGradientStyle(localGradientPoints, gradientType, gradientDegree),\n        });\n    }, [\n        colorRed, colorGreen, colorBlue, colorAlpha,\n        colorHue, colorSaturation, colorValue,\n        activePointIndex, gradientPoints, actions, gradientType, gradientDegree,\n    ]);\n\n    const updateGradientLeft = useCallback((left, index, actionName = 'onChange') => {\n        const localGradientPoints = gradientPoints.slice();\n        localGradientPoints[index].left = left;\n\n        setGradientPoints(localGradientPoints);\n\n        const action = actions[actionName];\n\n        action && action({\n            points: localGradientPoints,\n            type: gradientType,\n            degree: gradientDegree,\n            style: generateGradientStyle(localGradientPoints, gradientType, gradientDegree),\n        });\n    }, [actions, gradientPoints, gradientDegree, gradientType]);\n\n    const addPoint = useCallback(left => {\n        const localGradientPoints = gradientPoints.slice();\n\n        localGradientPoints.push({\n            ...localGradientPoints[activePointIndex],\n            left,\n        });\n\n        setGradientPoints(localGradientPoints);\n        setActivePointIndex(localGradientPoints.length - 1);\n\n        onChange && onChange({\n            points: localGradientPoints,\n            type: gradientType,\n            degree: gradientDegree,\n            style: generateGradientStyle(localGradientPoints, gradientType, gradientDegree),\n        });\n    }, [onChange, gradientPoints, activePointIndex, gradientType, gradientDegree]);\n\n    return (\n        <>\n            <GradientControls\n                type={gradientType}\n                degree={gradientDegree}\n                changeGradientControl={changeGradientControl}\n            />\n            <Area\n                red={colorRed}\n                green={colorGreen}\n                blue={colorBlue}\n                alpha={colorAlpha}\n                hue={colorHue}\n                saturation={colorSaturation}\n                value={colorValue}\n                updateRgb={updateColor}\n                isGradient\n                type={gradientType}\n                degree={gradientDegree}\n                points={gradientPoints}\n                activePointIndex={activePointIndex}\n                changeGradientControl={changeGradientControl}\n                changeActivePointIndex={changeActivePointIndex}\n                updateGradientLeft={updateGradientLeft}\n                addPoint={addPoint}\n                removePoint={removePoint}\n            />\n            <Preview\n                red={colorRed}\n                green={colorGreen}\n                blue={colorBlue}\n                alpha={colorAlpha}\n                updateRgb={updateColor}\n            />\n        </>\n    );\n}\n\nexport default Gradient;\n","import React from 'react';\n\nimport Solid from './Solid';\nimport Gradient from './Gradient';\n\nfunction ColorPicker({\n    color,\n    isGradient,\n    gradient,\n    onStartChange,\n    onChange,\n    onEndChange,\n}) {\n    return (\n        <div className=\"ui-color-picker\">\n            {\n                isGradient\n                    ? (\n                        <Gradient\n                            points={gradient.points}\n                            updateColor={onChange}\n                            type={gradient.type}\n                            degree={gradient.degree}\n                            onChange={onChange}\n                            onStartChange={onStartChange}\n                            onEndChange={onEndChange}\n                        />\n                    )\n                    : (\n                        <Solid\n                            red={color.red}\n                            green={color.green}\n                            blue={color.blue}\n                            alpha={color.alpha}\n                            onChange={onChange}\n                            onStartChange={onStartChange}\n                            onEndChange={onEndChange}\n                        />\n                    )\n            }\n        </div>\n    );\n}\n\nColorPicker.defaultProps = {\n    isGradient: false,\n    onChange: () => {},\n    color: {\n        red: 255,\n        green: 0,\n        blue: 0,\n        alpha: 1,\n    },\n    gradient: {\n        points: [\n            {\n                left: 0,\n                red: 0,\n                green: 0,\n                blue: 0,\n                alpha: 1,\n            },\n            {\n                left: 100,\n                red: 255,\n                green: 0,\n                blue: 0,\n                alpha: 1,\n            },\n        ],\n        degree: 0,\n        type: 'linear',\n    },\n};\n\nexport default ColorPicker;\n","import React from 'react';\n\nimport { ColorPicker } from './lib';\n\nfunction App() {\n    const onChange = (attrs, name) => {\n        console.log(attrs, name);\n    };\n\n    return (\n        <div style={{ display: 'flex', textAlign: 'center' }}>\n            <div style={{ marginRight: '50px' }}>\n                <p>Solid</p>\n                <ColorPicker\n                    onStartChange={color => onChange(color, 'start')}\n                    onChange={color => onChange(color, 'change')}\n                    onEndChange={color => onChange(color, 'end')}\n                />\n            </div>\n            <div>\n                <p>Gradient</p>\n                <ColorPicker\n                    onStartChange={color => onChange(color, 'start')}\n                    onChange={color => onChange(color, 'change')}\n                    onEndChange={color => onChange(color, 'end')}\n                    isGradient\n                />\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\n\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n"],"sourceRoot":""}